--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 9.1SP2 cbx_cycloneii 2010:03:24:20:38:24:SJ cbx_lpm_add_sub 2010:03:24:20:38:24:SJ cbx_lpm_compare 2010:03:24:20:38:24:SJ cbx_lpm_decode 2010:03:24:20:38:24:SJ cbx_mgl 2010:03:24:21:00:10:SJ cbx_stratix 2010:03:24:20:38:24:SJ cbx_stratixii 2010:03:24:20:38:24:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_opa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode2969w[2..0]	: WIRE;
	w_anode2982w[3..0]	: WIRE;
	w_anode2999w[3..0]	: WIRE;
	w_anode3009w[3..0]	: WIRE;
	w_anode3019w[3..0]	: WIRE;
	w_anode3029w[3..0]	: WIRE;
	w_anode3039w[3..0]	: WIRE;
	w_anode3049w[3..0]	: WIRE;
	w_anode3059w[3..0]	: WIRE;
	w_anode3071w[2..0]	: WIRE;
	w_anode3080w[3..0]	: WIRE;
	w_anode3091w[3..0]	: WIRE;
	w_anode3101w[3..0]	: WIRE;
	w_anode3111w[3..0]	: WIRE;
	w_anode3121w[3..0]	: WIRE;
	w_anode3131w[3..0]	: WIRE;
	w_anode3141w[3..0]	: WIRE;
	w_anode3151w[3..0]	: WIRE;
	w_anode3162w[2..0]	: WIRE;
	w_anode3171w[3..0]	: WIRE;
	w_anode3182w[3..0]	: WIRE;
	w_anode3192w[3..0]	: WIRE;
	w_anode3202w[3..0]	: WIRE;
	w_anode3212w[3..0]	: WIRE;
	w_anode3222w[3..0]	: WIRE;
	w_anode3232w[3..0]	: WIRE;
	w_anode3242w[3..0]	: WIRE;
	w_anode3253w[2..0]	: WIRE;
	w_anode3262w[3..0]	: WIRE;
	w_anode3273w[3..0]	: WIRE;
	w_anode3283w[3..0]	: WIRE;
	w_anode3293w[3..0]	: WIRE;
	w_anode3303w[3..0]	: WIRE;
	w_anode3313w[3..0]	: WIRE;
	w_anode3323w[3..0]	: WIRE;
	w_anode3333w[3..0]	: WIRE;
	w_data2967w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3333w[3..3], w_anode3323w[3..3], w_anode3313w[3..3], w_anode3303w[3..3], w_anode3293w[3..3], w_anode3283w[3..3], w_anode3273w[3..3], w_anode3262w[3..3]), ( w_anode3242w[3..3], w_anode3232w[3..3], w_anode3222w[3..3], w_anode3212w[3..3], w_anode3202w[3..3], w_anode3192w[3..3], w_anode3182w[3..3], w_anode3171w[3..3]), ( w_anode3151w[3..3], w_anode3141w[3..3], w_anode3131w[3..3], w_anode3121w[3..3], w_anode3111w[3..3], w_anode3101w[3..3], w_anode3091w[3..3], w_anode3080w[3..3]), ( w_anode3059w[3..3], w_anode3049w[3..3], w_anode3039w[3..3], w_anode3029w[3..3], w_anode3019w[3..3], w_anode3009w[3..3], w_anode2999w[3..3], w_anode2982w[3..3]));
	w_anode2969w[] = ( (w_anode2969w[1..1] & (! data_wire[4..4])), (w_anode2969w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2982w[] = ( (w_anode2982w[2..2] & (! w_data2967w[2..2])), (w_anode2982w[1..1] & (! w_data2967w[1..1])), (w_anode2982w[0..0] & (! w_data2967w[0..0])), w_anode2969w[2..2]);
	w_anode2999w[] = ( (w_anode2999w[2..2] & (! w_data2967w[2..2])), (w_anode2999w[1..1] & (! w_data2967w[1..1])), (w_anode2999w[0..0] & w_data2967w[0..0]), w_anode2969w[2..2]);
	w_anode3009w[] = ( (w_anode3009w[2..2] & (! w_data2967w[2..2])), (w_anode3009w[1..1] & w_data2967w[1..1]), (w_anode3009w[0..0] & (! w_data2967w[0..0])), w_anode2969w[2..2]);
	w_anode3019w[] = ( (w_anode3019w[2..2] & (! w_data2967w[2..2])), (w_anode3019w[1..1] & w_data2967w[1..1]), (w_anode3019w[0..0] & w_data2967w[0..0]), w_anode2969w[2..2]);
	w_anode3029w[] = ( (w_anode3029w[2..2] & w_data2967w[2..2]), (w_anode3029w[1..1] & (! w_data2967w[1..1])), (w_anode3029w[0..0] & (! w_data2967w[0..0])), w_anode2969w[2..2]);
	w_anode3039w[] = ( (w_anode3039w[2..2] & w_data2967w[2..2]), (w_anode3039w[1..1] & (! w_data2967w[1..1])), (w_anode3039w[0..0] & w_data2967w[0..0]), w_anode2969w[2..2]);
	w_anode3049w[] = ( (w_anode3049w[2..2] & w_data2967w[2..2]), (w_anode3049w[1..1] & w_data2967w[1..1]), (w_anode3049w[0..0] & (! w_data2967w[0..0])), w_anode2969w[2..2]);
	w_anode3059w[] = ( (w_anode3059w[2..2] & w_data2967w[2..2]), (w_anode3059w[1..1] & w_data2967w[1..1]), (w_anode3059w[0..0] & w_data2967w[0..0]), w_anode2969w[2..2]);
	w_anode3071w[] = ( (w_anode3071w[1..1] & (! data_wire[4..4])), (w_anode3071w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3080w[] = ( (w_anode3080w[2..2] & (! w_data2967w[2..2])), (w_anode3080w[1..1] & (! w_data2967w[1..1])), (w_anode3080w[0..0] & (! w_data2967w[0..0])), w_anode3071w[2..2]);
	w_anode3091w[] = ( (w_anode3091w[2..2] & (! w_data2967w[2..2])), (w_anode3091w[1..1] & (! w_data2967w[1..1])), (w_anode3091w[0..0] & w_data2967w[0..0]), w_anode3071w[2..2]);
	w_anode3101w[] = ( (w_anode3101w[2..2] & (! w_data2967w[2..2])), (w_anode3101w[1..1] & w_data2967w[1..1]), (w_anode3101w[0..0] & (! w_data2967w[0..0])), w_anode3071w[2..2]);
	w_anode3111w[] = ( (w_anode3111w[2..2] & (! w_data2967w[2..2])), (w_anode3111w[1..1] & w_data2967w[1..1]), (w_anode3111w[0..0] & w_data2967w[0..0]), w_anode3071w[2..2]);
	w_anode3121w[] = ( (w_anode3121w[2..2] & w_data2967w[2..2]), (w_anode3121w[1..1] & (! w_data2967w[1..1])), (w_anode3121w[0..0] & (! w_data2967w[0..0])), w_anode3071w[2..2]);
	w_anode3131w[] = ( (w_anode3131w[2..2] & w_data2967w[2..2]), (w_anode3131w[1..1] & (! w_data2967w[1..1])), (w_anode3131w[0..0] & w_data2967w[0..0]), w_anode3071w[2..2]);
	w_anode3141w[] = ( (w_anode3141w[2..2] & w_data2967w[2..2]), (w_anode3141w[1..1] & w_data2967w[1..1]), (w_anode3141w[0..0] & (! w_data2967w[0..0])), w_anode3071w[2..2]);
	w_anode3151w[] = ( (w_anode3151w[2..2] & w_data2967w[2..2]), (w_anode3151w[1..1] & w_data2967w[1..1]), (w_anode3151w[0..0] & w_data2967w[0..0]), w_anode3071w[2..2]);
	w_anode3162w[] = ( (w_anode3162w[1..1] & data_wire[4..4]), (w_anode3162w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3171w[] = ( (w_anode3171w[2..2] & (! w_data2967w[2..2])), (w_anode3171w[1..1] & (! w_data2967w[1..1])), (w_anode3171w[0..0] & (! w_data2967w[0..0])), w_anode3162w[2..2]);
	w_anode3182w[] = ( (w_anode3182w[2..2] & (! w_data2967w[2..2])), (w_anode3182w[1..1] & (! w_data2967w[1..1])), (w_anode3182w[0..0] & w_data2967w[0..0]), w_anode3162w[2..2]);
	w_anode3192w[] = ( (w_anode3192w[2..2] & (! w_data2967w[2..2])), (w_anode3192w[1..1] & w_data2967w[1..1]), (w_anode3192w[0..0] & (! w_data2967w[0..0])), w_anode3162w[2..2]);
	w_anode3202w[] = ( (w_anode3202w[2..2] & (! w_data2967w[2..2])), (w_anode3202w[1..1] & w_data2967w[1..1]), (w_anode3202w[0..0] & w_data2967w[0..0]), w_anode3162w[2..2]);
	w_anode3212w[] = ( (w_anode3212w[2..2] & w_data2967w[2..2]), (w_anode3212w[1..1] & (! w_data2967w[1..1])), (w_anode3212w[0..0] & (! w_data2967w[0..0])), w_anode3162w[2..2]);
	w_anode3222w[] = ( (w_anode3222w[2..2] & w_data2967w[2..2]), (w_anode3222w[1..1] & (! w_data2967w[1..1])), (w_anode3222w[0..0] & w_data2967w[0..0]), w_anode3162w[2..2]);
	w_anode3232w[] = ( (w_anode3232w[2..2] & w_data2967w[2..2]), (w_anode3232w[1..1] & w_data2967w[1..1]), (w_anode3232w[0..0] & (! w_data2967w[0..0])), w_anode3162w[2..2]);
	w_anode3242w[] = ( (w_anode3242w[2..2] & w_data2967w[2..2]), (w_anode3242w[1..1] & w_data2967w[1..1]), (w_anode3242w[0..0] & w_data2967w[0..0]), w_anode3162w[2..2]);
	w_anode3253w[] = ( (w_anode3253w[1..1] & data_wire[4..4]), (w_anode3253w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3262w[] = ( (w_anode3262w[2..2] & (! w_data2967w[2..2])), (w_anode3262w[1..1] & (! w_data2967w[1..1])), (w_anode3262w[0..0] & (! w_data2967w[0..0])), w_anode3253w[2..2]);
	w_anode3273w[] = ( (w_anode3273w[2..2] & (! w_data2967w[2..2])), (w_anode3273w[1..1] & (! w_data2967w[1..1])), (w_anode3273w[0..0] & w_data2967w[0..0]), w_anode3253w[2..2]);
	w_anode3283w[] = ( (w_anode3283w[2..2] & (! w_data2967w[2..2])), (w_anode3283w[1..1] & w_data2967w[1..1]), (w_anode3283w[0..0] & (! w_data2967w[0..0])), w_anode3253w[2..2]);
	w_anode3293w[] = ( (w_anode3293w[2..2] & (! w_data2967w[2..2])), (w_anode3293w[1..1] & w_data2967w[1..1]), (w_anode3293w[0..0] & w_data2967w[0..0]), w_anode3253w[2..2]);
	w_anode3303w[] = ( (w_anode3303w[2..2] & w_data2967w[2..2]), (w_anode3303w[1..1] & (! w_data2967w[1..1])), (w_anode3303w[0..0] & (! w_data2967w[0..0])), w_anode3253w[2..2]);
	w_anode3313w[] = ( (w_anode3313w[2..2] & w_data2967w[2..2]), (w_anode3313w[1..1] & (! w_data2967w[1..1])), (w_anode3313w[0..0] & w_data2967w[0..0]), w_anode3253w[2..2]);
	w_anode3323w[] = ( (w_anode3323w[2..2] & w_data2967w[2..2]), (w_anode3323w[1..1] & w_data2967w[1..1]), (w_anode3323w[0..0] & (! w_data2967w[0..0])), w_anode3253w[2..2]);
	w_anode3333w[] = ( (w_anode3333w[2..2] & w_data2967w[2..2]), (w_anode3333w[1..1] & w_data2967w[1..1]), (w_anode3333w[0..0] & w_data2967w[0..0]), w_anode3253w[2..2]);
	w_data2967w[2..0] = data_wire[2..0];
END;
--VALID FILE
